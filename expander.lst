;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/6/2011 8:21:57 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFED  	GOTO        474
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_SPI1_Read:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,68 :: 		
0x001C	0xFFC9C022  	MOVFF       FARG_SPI1_Read_buffer, SSPBUF
;__Lib_SPI_c345.c,69 :: 		
L_SPI1_Read6:
0x0020	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0022	0xD002      	BRA         L_SPI1_Read7
;__Lib_SPI_c345.c,70 :: 		
0x0024	0x0000      	NOP
0x0026	0xD7FC      	BRA         L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,71 :: 		
0x0028	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,72 :: 		
L_end_SPI1_Read:
0x002C	0x0012      	RETURN      0
; end of _SPI1_Read
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x002E	0x0000      	NOP
0x0030	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0032	0x0012      	RETURN      0
; end of _Delay_1us
_____DoIFC:
;__Lib_System.c,33 :: 		
;__Lib_System.c,34 :: 		
0x0034	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,35 :: 		
0x0036	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,36 :: 		
0x0038	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,37 :: 		
0x003A	0x0005      	PUSH
;__Lib_System.c,38 :: 		
0x003C	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,39 :: 		
0x003E	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,40 :: 		
0x0040	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,41 :: 		
0x0042	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,42 :: 		
0x0044	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,43 :: 		
0x0046	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,44 :: 		
0x0048	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,45 :: 		
;__Lib_System.c,47 :: 		
L_end_____DoIFC:
0x004A	0x0012      	RETURN      0
; end of _____DoIFC
_Expander_Read_Byte:
;__Lib_PortExpander.c,364 :: 		
;__Lib_PortExpander.c,366 :: 		
0x004C	0xF000C01F  	MOVFF       FARG_Expander_Read_Byte_ModuleAddress, R0
0x0050	0x3600      	RLCF        R0, 1 
0x0052	0x9000      	BCF         R0, 0 
0x0054	0xF01FC000  	MOVFF       R0, FARG_Expander_Read_Byte_ModuleAddress
;__Lib_PortExpander.c,367 :: 		
0x0058	0x9282      	BCF         SPExpanderCS, BitPos(SPExpanderCS+0) 
;__Lib_PortExpander.c,368 :: 		
0x005A	0x8C00      	BSF         R0, 6 
0x005C	0x8000      	BSF         R0, 0 
0x005E	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x0062	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0066	0xFFE6C000  	MOVFF       R0, POSTINC1
0x006A	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x006E	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0072	0xDFE0      	RCALL       _____DoIFC
;__Lib_PortExpander.c,369 :: 		
0x0074	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x0078	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x007C	0xFFE6C020  	MOVFF       FARG_Expander_Read_Byte_RegAddress, POSTINC1
0x0080	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x0084	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0088	0xDFD5      	RCALL       _____DoIFC
;__Lib_PortExpander.c,370 :: 		
0x008A	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x008E	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0092	0x6AE6      	CLRF        POSTINC1 
0x0094	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x0098	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x009C	0xDFCB      	RCALL       _____DoIFC
0x009E	0xF021C000  	MOVFF       R0, Expander_Read_Byte_temp_L0
;__Lib_PortExpander.c,371 :: 		
0x00A2	0x8282      	BSF         SPExpanderCS, BitPos(SPExpanderCS+0) 
0x00A4	0xDFC4      	RCALL       _Delay_1us
0x00A6	0xDFC3      	RCALL       _Delay_1us
0x00A8	0xDFC2      	RCALL       _Delay_1us
;__Lib_PortExpander.c,372 :: 		
0x00AA	0xF000C021  	MOVFF       Expander_Read_Byte_temp_L0, R0
;__Lib_PortExpander.c,373 :: 		
L_end_Expander_Read_Byte:
0x00AE	0x0012      	RETURN      0
; end of _Expander_Read_Byte
_Expander_Write_Byte:
;__Lib_PortExpander.c,375 :: 		
;__Lib_PortExpander.c,377 :: 		
0x00B0	0xF000C01F  	MOVFF       FARG_Expander_Write_Byte_ModuleAddress, R0
0x00B4	0x3600      	RLCF        R0, 1 
0x00B6	0x9000      	BCF         R0, 0 
0x00B8	0xF01FC000  	MOVFF       R0, FARG_Expander_Write_Byte_ModuleAddress
;__Lib_PortExpander.c,378 :: 		
0x00BC	0x9282      	BCF         SPExpanderCS, BitPos(SPExpanderCS+0) 
;__Lib_PortExpander.c,379 :: 		
0x00BE	0x8C00      	BSF         R0, 6 
0x00C0	0x0EFE      	MOVLW       254
0x00C2	0x1600      	ANDWF       R0, 1 
0x00C4	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x00C8	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00CC	0xFFE6C000  	MOVFF       R0, POSTINC1
0x00D0	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x00D4	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00D8	0xDFAD      	RCALL       _____DoIFC
;__Lib_PortExpander.c,380 :: 		
0x00DA	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x00DE	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00E2	0xFFE6C020  	MOVFF       FARG_Expander_Write_Byte_RegAddress, POSTINC1
0x00E6	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x00EA	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00EE	0xDFA2      	RCALL       _____DoIFC
;__Lib_PortExpander.c,381 :: 		
0x00F0	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x00F4	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00F8	0xFFE6C021  	MOVFF       FARG_Expander_Write_Byte_Data_, POSTINC1
0x00FC	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x0100	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0104	0xDF97      	RCALL       _____DoIFC
;__Lib_PortExpander.c,382 :: 		
0x0106	0x8282      	BSF         SPExpanderCS, BitPos(SPExpanderCS+0) 
0x0108	0xDF92      	RCALL       _Delay_1us
0x010A	0xDF91      	RCALL       _Delay_1us
0x010C	0xDF90      	RCALL       _Delay_1us
;__Lib_PortExpander.c,383 :: 		
L_end_Expander_Write_Byte:
0x010E	0x0012      	RETURN      0
; end of _Expander_Write_Byte
_Expander_Read_PortB:
;__Lib_PortExpander.c,391 :: 		
;__Lib_PortExpander.c,393 :: 		
0x0110	0xF01FC01D  	MOVFF       FARG_Expander_Read_PortB_ModuleAddress, FARG_Expander_Read_Byte_ModuleAddress
0x0114	0x0E13      	MOVLW       19
0x0116	0x6E20      	MOVWF       FARG_Expander_Read_Byte_RegAddress 
0x0118	0xDF99      	RCALL       _Expander_Read_Byte
;__Lib_PortExpander.c,394 :: 		
L_end_Expander_Read_PortB:
0x011A	0x0012      	RETURN      0
; end of _Expander_Read_PortB
_Expander_Set_DirectionPortA:
;__Lib_PortExpander.c,420 :: 		
;__Lib_PortExpander.c,422 :: 		
0x011C	0xF01FC01D  	MOVFF       FARG_Expander_Set_DirectionPortA_ModuleAddress, FARG_Expander_Write_Byte_ModuleAddress
0x0120	0x6A20      	CLRF        FARG_Expander_Write_Byte_RegAddress 
0x0122	0xF021C01E  	MOVFF       FARG_Expander_Set_DirectionPortA_Data_, FARG_Expander_Write_Byte_Data_
0x0126	0xDFC4      	RCALL       _Expander_Write_Byte
;__Lib_PortExpander.c,423 :: 		
L_end_Expander_Set_DirectionPortA:
0x0128	0x0012      	RETURN      0
; end of _Expander_Set_DirectionPortA
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x012A	0x0E1C      	MOVLW       _SPI1_Read
0x012C	0x6E19      	MOVWF       _SPI_Rd_Ptr 
0x012E	0x0E00      	MOVLW       hi_addr(_SPI1_Read)
0x0130	0x6E1A      	MOVWF       _SPI_Rd_Ptr+1 
0x0132	0x0E22      	MOVLW       FARG_SPI1_Read_buffer
0x0134	0x6E1B      	MOVWF       _SPI_Rd_Ptr+2 
0x0136	0x0E00      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x0138	0x6E1C      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345.c,25 :: 		
0x013A	0x0EFF      	MOVLW       _SPI1_Write
0x013C	0x6E15      	MOVWF       _SPI_Wr_Ptr 
0x013E	0x0EFF      	MOVLW       hi_addr(_SPI1_Write)
0x0140	0x6E16      	MOVWF       _SPI_Wr_Ptr+1 
0x0142	0x0EFF      	MOVLW       FARG_SPI1_Write_data_
0x0144	0x6E17      	MOVWF       _SPI_Wr_Ptr+2 
0x0146	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x0148	0x6E18      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345.c,27 :: 		
0x014A	0x9A94      	BCF         TRISC5_bit, 5 
;__Lib_SPI_c345.c,28 :: 		
0x014C	0x9694      	BCF         TRISC3_bit, 3 
;__Lib_SPI_c345.c,29 :: 		
0x014E	0x8894      	BSF         TRISC4_bit, 4 
;__Lib_SPI_c345.c,31 :: 		
0x0150	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_c345.c,32 :: 		
0x0152	0x0E40      	MOVLW       64
0x0154	0x6EC7      	MOVWF       SSPSTAT 
;__Lib_SPI_c345.c,33 :: 		
0x0156	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_c345.c,35 :: 		
L_end_SPI1_Init:
0x0158	0x0012      	RETURN      0
; end of _SPI1_Init
_Expander_Init:
;__Lib_PortExpander.c,290 :: 		
;__Lib_PortExpander.c,302 :: 		
0x015A	0x9094      	BCF         SPExpanderRST_Direction, BitPos(SPExpanderRST_Direction+0) 
;__Lib_PortExpander.c,303 :: 		
0x015C	0x8082      	BSF         SPExpanderRST, BitPos(SPExpanderRST+0) 
;__Lib_PortExpander.c,305 :: 		
0x015E	0x9294      	BCF         SPExpanderCS_Direction, BitPos(SPExpanderCS_Direction+0) 
;__Lib_PortExpander.c,306 :: 		
0x0160	0x8282      	BSF         SPExpanderCS, BitPos(SPExpanderCS+0) 
;__Lib_PortExpander.c,309 :: 		
0x0162	0x9082      	BCF         SPExpanderRST, BitPos(SPExpanderRST+0) 
;__Lib_PortExpander.c,310 :: 		
0x0164	0xDF64      	RCALL       _Delay_1us
;__Lib_PortExpander.c,311 :: 		
0x0166	0xDF63      	RCALL       _Delay_1us
;__Lib_PortExpander.c,312 :: 		
0x0168	0x8082      	BSF         SPExpanderRST, BitPos(SPExpanderRST+0) 
;__Lib_PortExpander.c,313 :: 		
0x016A	0xDF61      	RCALL       _Delay_1us
;__Lib_PortExpander.c,316 :: 		
0x016C	0x9282      	BCF         SPExpanderCS, BitPos(SPExpanderCS+0) 
;__Lib_PortExpander.c,319 :: 		
0x016E	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x0172	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0176	0x0E40      	MOVLW       64
0x0178	0x6EE6      	MOVWF       POSTINC1 
0x017A	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x017E	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0182	0xDF58      	RCALL       _____DoIFC
;__Lib_PortExpander.c,320 :: 		
0x0184	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x0188	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x018C	0x0E0A      	MOVLW       10
0x018E	0x6EE6      	MOVWF       POSTINC1 
0x0190	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x0194	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0198	0xDF4D      	RCALL       _____DoIFC
;__Lib_PortExpander.c,321 :: 		
0x019A	0xFFE1C01B  	MOVFF       _SPI_Rd_Ptr+2, FSR1
0x019E	0xFFE2C01C  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x01A2	0x0E08      	MOVLW       8
0x01A4	0x6EE6      	MOVWF       POSTINC1 
0x01A6	0xF000C019  	MOVFF       _SPI_Rd_Ptr, R0
0x01AA	0xF001C01A  	MOVFF       _SPI_Rd_Ptr+1, R1
0x01AE	0xDF42      	RCALL       _____DoIFC
;__Lib_PortExpander.c,323 :: 		
0x01B0	0x8282      	BSF         SPExpanderCS, BitPos(SPExpanderCS+0) 
0x01B2	0xDF3D      	RCALL       _Delay_1us
0x01B4	0xDF3C      	RCALL       _Delay_1us
0x01B6	0xDF3B      	RCALL       _Delay_1us
;__Lib_PortExpander.c,324 :: 		
L_end_Expander_Init:
0x01B8	0x0012      	RETURN      0
; end of _Expander_Init
_Expander_Set_DirectionPortB:
;__Lib_PortExpander.c,425 :: 		
;__Lib_PortExpander.c,427 :: 		
0x01BA	0xF01FC01D  	MOVFF       FARG_Expander_Set_DirectionPortB_ModuleAddress, FARG_Expander_Write_Byte_ModuleAddress
0x01BE	0x0E01      	MOVLW       1
0x01C0	0x6E20      	MOVWF       FARG_Expander_Write_Byte_RegAddress 
0x01C2	0xF021C01E  	MOVFF       FARG_Expander_Set_DirectionPortB_Data_, FARG_Expander_Write_Byte_Data_
0x01C6	0xDF74      	RCALL       _Expander_Write_Byte
;__Lib_PortExpander.c,429 :: 		
L_end_Expander_Set_DirectionPortB:
0x01C8	0x0012      	RETURN      0
; end of _Expander_Set_DirectionPortB
_Expander_Write_PortA:
;__Lib_PortExpander.c,404 :: 		
;__Lib_PortExpander.c,406 :: 		
0x01CA	0xF01FC01D  	MOVFF       FARG_Expander_Write_PortA_ModuleAddress, FARG_Expander_Write_Byte_ModuleAddress
0x01CE	0x0E14      	MOVLW       20
0x01D0	0x6E20      	MOVWF       FARG_Expander_Write_Byte_RegAddress 
0x01D2	0xF021C01E  	MOVFF       FARG_Expander_Write_PortA_Data_, FARG_Expander_Write_Byte_Data_
0x01D6	0xDF6C      	RCALL       _Expander_Write_Byte
;__Lib_PortExpander.c,407 :: 		
L_end_Expander_Write_PortA:
0x01D8	0x0012      	RETURN      0
; end of _Expander_Write_PortA
_main:
;expander.c,8 :: 		void main() {
;expander.c,18 :: 		OSCCON=0x6E;
0x01DA	0x0E6E      	MOVLW       110
0x01DC	0x6ED3      	MOVWF       OSCCON 
;expander.c,24 :: 		CMCON=0x07;
0x01DE	0x0E07      	MOVLW       7
0x01E0	0x6EB4      	MOVWF       CMCON 
;expander.c,33 :: 		ADCON0=0x02;
0x01E2	0x0E02      	MOVLW       2
0x01E4	0x6EC2      	MOVWF       ADCON0 
;expander.c,42 :: 		ADCON1=0x0E;
0x01E6	0x0E0E      	MOVLW       14
0x01E8	0x6EC1      	MOVWF       ADCON1 
;expander.c,48 :: 		SPI1_Init();                                   // Initialize SPI module used with PortExpander
0x01EA	0xDF9F      	RCALL       _SPI1_Init
;expander.c,53 :: 		Expander_Init(0);                      // Initialize Port Expander
0x01EC	0x6A1D      	CLRF        FARG_Expander_Init_ModuleAddress 
0x01EE	0xDFB5      	RCALL       _Expander_Init
;expander.c,55 :: 		Expander_Set_DirectionPortA(0, 0x00);  // Set Expander's PORTA to be output
0x01F0	0x6A1D      	CLRF        FARG_Expander_Set_DirectionPortA_ModuleAddress 
0x01F2	0x6A1E      	CLRF        FARG_Expander_Set_DirectionPortA_Data_ 
0x01F4	0xDF93      	RCALL       _Expander_Set_DirectionPortA
;expander.c,56 :: 		Expander_Set_DirectionPortB(0,0xFF);   // Set Expander's PORTB to be input
0x01F6	0x6A1D      	CLRF        FARG_Expander_Set_DirectionPortB_ModuleAddress 
0x01F8	0x0EFF      	MOVLW       255
0x01FA	0x6E1E      	MOVWF       FARG_Expander_Set_DirectionPortB_Data_ 
0x01FC	0xDFDE      	RCALL       _Expander_Set_DirectionPortB
;expander.c,59 :: 		while(1) {                             // Endless loop
L_main0:
;expander.c,60 :: 		Expander_Write_PortA(0, Expander_Read_PortB(0));        // Write i to expander's PORTA
0x01FE	0x6A1D      	CLRF        FARG_Expander_Read_PortB_ModuleAddress 
0x0200	0xDF87      	RCALL       _Expander_Read_PortB
0x0202	0xF01EC000  	MOVFF       R0, FARG_Expander_Write_PortA_Data_
0x0206	0x6A1D      	CLRF        FARG_Expander_Write_PortA_ModuleAddress 
0x0208	0xDFE0      	RCALL       _Expander_Write_PortA
;expander.c,62 :: 		Delay_ms(100);
0x020A	0x0E02      	MOVLW       2
0x020C	0x6E0B      	MOVWF       R11, 0
0x020E	0x0E04      	MOVLW       4
0x0210	0x6E0C      	MOVWF       R12, 0
0x0212	0x0EBA      	MOVLW       186
0x0214	0x6E0D      	MOVWF       R13, 0
L_main2:
0x0216	0x2E0D      	DECFSZ      R13, 1, 0
0x0218	0xD7FE      	BRA         L_main2
0x021A	0x2E0C      	DECFSZ      R12, 1, 0
0x021C	0xD7FC      	BRA         L_main2
0x021E	0x2E0B      	DECFSZ      R11, 1, 0
0x0220	0xD7FA      	BRA         L_main2
0x0222	0x0000      	NOP
;expander.c,63 :: 		}
0x0224	0xD7EC      	BRA         L_main0
;expander.c,64 :: 		}
L_end_main:
0x0226	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _SPI1_Read
0x002E       [6]    _Delay_1us
0x0034      [24]    _____DoIFC
0x004C     [100]    _Expander_Read_Byte
0x00B0      [96]    _Expander_Write_Byte
0x0110      [12]    _Expander_Read_PortB
0x011C      [14]    _Expander_Set_DirectionPortA
0x012A      [48]    _SPI1_Init
0x015A      [96]    _Expander_Init
0x01BA      [16]    _Expander_Set_DirectionPortB
0x01CA      [16]    _Expander_Write_PortA
0x01DA      [78]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _SPI_Wr_Ptr
0x0019       [4]    _SPI_Rd_Ptr
0x001D       [1]    FARG_Expander_Set_DirectionPortB_ModuleAddress
0x001D       [1]    FARG_Expander_Set_DirectionPortA_ModuleAddress
0x001D       [1]    FARG_Expander_Write_PortA_ModuleAddress
0x001D       [1]    FARG_Expander_Read_PortB_ModuleAddress
0x001D       [1]    FARG_Expander_Init_ModuleAddress
0x001E       [1]    FARG_Expander_Write_PortA_Data_
0x001E       [1]    FARG_Expander_Set_DirectionPortB_Data_
0x001E       [1]    FARG_Expander_Set_DirectionPortA_Data_
0x001F       [1]    FARG_Expander_Read_Byte_ModuleAddress
0x001F       [1]    FARG_Expander_Write_Byte_ModuleAddress
0x0020       [1]    FARG_Expander_Read_Byte_RegAddress
0x0020       [1]    FARG_Expander_Write_Byte_RegAddress
0x0021       [1]    FARG_Expander_Write_Byte_Data_
0x0021       [1]    Expander_Read_Byte_temp_L0
0x0022       [1]    FARG_SPI1_Read_buffer
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    SPExpanderCS
0x0F82       [0]    SPExpanderRST
0x0F94       [0]    SPExpanderCS_Direction
0x0F94       [0]    SPExpanderRST_Direction
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC4_bit
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_end_main
  _main
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end____Boot_Delay4k
  ____Boot_Delay4k
  L_end____Boot_Delay8k
  ____Boot_Delay8k
  L_end____Boot_Delay12k
  ____Boot_Delay12k
  L_end____Boot_Delay16k
  ____Boot_Delay16k
  L_end____Boot_Delay24k
  ____Boot_Delay24k
  L_end____Boot_Delay32k
  ____Boot_Delay32k
  L_end____Boot_Delay48k
  ____Boot_Delay48k
  L_end____Boot_Delay64k
  ____Boot_Delay64k
  L_end____Boot_Delay128k
  ____Boot_Delay128k
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms54
  L__VDelay_ms55
  L__VDelay_ms56
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms58
  L__VDelay_Advanced_ms59
  L__VDelay_Advanced_ms60
  L_Expander_Init_Advanced0
  L_end_Expander_Init
  _Expander_Init
  L_end_Expander_Init_Advanced
  _Expander_Init_Advanced
  L__Expander_Init_Advanced3
  L__Expander_Init_Advanced4
  L__Expander_Init_Advanced5
  L__Expander_Init_Advanced6
  L__Expander_Init_Advanced7
  L__Expander_Init_Advanced8
  L__Expander_Init_Advanced9
  L__Expander_Init_Advanced10
  L_end_Expander_Read_Byte
  _Expander_Read_Byte
  L_end_Expander_Write_Byte
  _Expander_Write_Byte
  L_end_Expander_Read_PortA
  _Expander_Read_PortA
  L_end_Expander_Read_PortB
  _Expander_Read_PortB
  L_end_Expander_Read_PortAB
  _Expander_Read_PortAB
  L_end_Expander_Write_PortA
  _Expander_Write_PortA
  L_end_Expander_Write_PortB
  _Expander_Write_PortB
  L_end_Expander_Write_PortAB
  _Expander_Write_PortAB
  L_end_Expander_Set_DirectionPortA
  _Expander_Set_DirectionPortA
  L_end_Expander_Set_DirectionPortB
  _Expander_Set_DirectionPortB
  L_end_Expander_Set_DirectionPortAB
  _Expander_Set_DirectionPortAB
  L_end_Expander_Set_PullUpsPortA
  _Expander_Set_PullUpsPortA
  L_end_Expander_Set_PullUpsPortB
  _Expander_Set_PullUpsPortB
  L_end_Expander_Set_PullUpsPortAB
  _Expander_Set_PullUpsPortAB
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
